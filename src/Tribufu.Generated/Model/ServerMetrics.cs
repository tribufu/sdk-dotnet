/*
 * Tribufu API
 *
 * REST API to access Tribufu services.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: contact@tribufu.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Tribufu.Generated.Client.OpenAPIDateConverter;

namespace Tribufu.Generated.Model
{
    /// <summary>
    /// ServerMetrics
    /// </summary>
    [DataContract(Name = "ServerMetrics")]
    public partial class ServerMetrics : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServerMetrics" /> class.
        /// </summary>
        /// <param name="serverCount">serverCount.</param>
        /// <param name="packageCount">packageCount.</param>
        /// <param name="countryCount">countryCount.</param>
        public ServerMetrics(int serverCount = default(int), int packageCount = default(int), int countryCount = default(int))
        {
            this.ServerCount = serverCount;
            this.PackageCount = packageCount;
            this.CountryCount = countryCount;
        }

        /// <summary>
        /// Gets or Sets ServerCount
        /// </summary>
        [DataMember(Name = "server_count", EmitDefaultValue = false)]
        public int ServerCount { get; set; }

        /// <summary>
        /// Gets or Sets PackageCount
        /// </summary>
        [DataMember(Name = "package_count", EmitDefaultValue = false)]
        public int PackageCount { get; set; }

        /// <summary>
        /// Gets or Sets CountryCount
        /// </summary>
        [DataMember(Name = "country_count", EmitDefaultValue = false)]
        public int CountryCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServerMetrics {\n");
            sb.Append("  ServerCount: ").Append(ServerCount).Append("\n");
            sb.Append("  PackageCount: ").Append(PackageCount).Append("\n");
            sb.Append("  CountryCount: ").Append(CountryCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
